---
title: Clase 02 - Laboratorio
format:
    html:
        code-fold: true
        code-copy: false
        code-overflow: wrap
        toc: true
bread-crumbs: true
page-navigation: true
---

## Instalación de ROS2

::: {.panel-tabset}

### Windows 10 / 11 (WSL)

{{< include _win10-11.qmd >}}

### Ubuntu 24.04

{{< include _ubuntu-24.qmd >}}

### Docker

#### 1️⃣ Instalar Docker

#### 2️⃣ Instalar Extensiones `devcontainer`

#### 3️⃣ Crear `devcontainer.json`

{{< include _devcontainer.qmd >}}

:::

## Configuración del entorno

Configurar el entorno:
```{.bash code-line-numbers="false"}
    $ source /opt/ros/jazzy/setup.bash
```

Variables de entorno: `ROS_DOMAIN_ID`
```{.bash code-line-numbers="false"}
    $ printenv | grep -i ROS
```

Obtener ayuda desde la terminal:
```{.bash code-line-numbers="false"}
    $ ros2 --help
```

## Emisor / Receptor

### Instalación de paquetes de demostración: `demo-nodes-py`

```{.bash code-line-numbers="false"}
    $ sudo apt install ros-jazzy-demo-nodes-py
```

Ver paquetes instalados:
```{.bash code-line-numbers="false"}
    $ ros2 pkg executables
```

### Nodos `talker` y `listener` 

#### Ejecutar nodos
   
>       $ ros2 run <nombre_paquete> <nombre_ejecutable>

---------

```{.bash code-line-numbers="false"}
    $ ros2 run demo_nodes_py talker
```
y en otra terminal
```{.bash code-line-numbers="false"}
    $ ros2 run demo_nodes_py listener
```

::: {.callout-tip}
Recuerda volver a configurar el entorno y configurar el `ROS_DOMAIN_ID` correctamente
:::

---------

::: {.callout-tip}
Para detener el nodo: `Ctrl+C`
:::

#### Listar los nodos

```{.bash code-line-numbers="false"}
    $ ros2 node list
```

#### Obtener información

>       $ ros2 node info <nombre_nodo>

---------

```{.bash code-line-numbers="false"}
    $ ros2 node info /talker
```

### Topics

#### Listar los topics

```{.bash code-line-numbers="false"}
    $ ros2 topic list
```

#### Obtener información

Información acerca del _topic_: `ros2 topic info <nombre_topic>`

---------

```{.bash code-line-numbers="false"}
    $ ros2 topic info /chatter
```

Información acerca del tipo de _topic_: `ros2 topic type <nombre_topic>` 

---------

```{.bash code-line-numbers="false"}
    $ ros2 topic type /chatter
```

Medir la frecuencia con la que se publican mensajes: `ros2 topic hz <nombre_topic>` 

---------

```{.bash code-line-numbers="false"}
    $ ros2 topic hz /chatter
```

#### Ver los mensajes que pasan por un topic

>       $ ros2 topic echo <nombre_topic>

---------

```{.bash code-line-numbers="false"}
    $ ros2 topic echo /chatter
```

### Mensajes

#### Obtener información

>       $ ros2 interface show <nombre_del_tipo_de_mensaje>

Ejemplo
```{.bash code-line-numbers="false"}
    $ ros2 interface show std_msgs/msg/String
```

#### Publicar mensajes

>       $ ros2 topic pub <nombre_del_topic>
>           <nombre_del_tipo_de_mensaje> '<contenido>'

Ejemplo
```{.bash code-line-numbers="false"}
    $ ros2 topic pub /chatter std_msgs/msg/String "{data: Mensaje de prueba}"
```

